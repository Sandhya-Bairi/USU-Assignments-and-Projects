/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.usu.stockMonitoring.forms;

import importer.ListOfAllStocks;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import com.usu.stocks.Portfolio;
import com.usu.stocks.Stock;

/**
 *
 * @author Shobhit
 */
public class ObserverOne extends javax.swing.JPanel implements Observer,Runnable{

    private Portfolio portfolio;
    private UserStockTableModel tableModel;
    private ArrayList <Stock> registeredStockList;
    private ImageIcon upIcon;
    private ImageIcon downIcon;
    private JPanel informationHeader;
    private JLabel header;
    private int counterVariable = 0;
    private Thread t ;
    private static boolean flag ;
    
    /**
     * Creates new form ObserverOne
     */
    public ObserverOne(Portfolio portfolio, JPanel header) {
        initComponents();
        this.portfolio = portfolio;
        flag = false;
        this.informationHeader = header;
        t = new Thread(this);
        
        
        System.out.println("-----");
        createTable();
        addUserPortfolioToTable();
        flag = true;
        t.start();
    }
    
    public void createTable(){ 
        tableModel = new UserStockTableModel();
        
         for(int i=0;i<tableModel.getRowCount();i++){
             tableModel.removeRow(i);
         }
        
        System.out.println("Table model is "+tableModel);
        tableModel.getDataVector().removeAllElements();
        tableModel.fireTableDataChanged();
        UserPortfolioJTable.setModel(tableModel);
        UserPortfolioJTable.setShowGrid(false);
        UserPortfolioJTable.setRowMargin(0);
        UserPortfolioJTable.setShowVerticalLines(false);
        UserPortfolioJTable.setShowHorizontalLines(false);
        UserPortfolioJTable.getColumnModel().getColumn(0).setPreferredWidth(5);
        UserPortfolioJTable.getColumnModel().getColumn(1).setPreferredWidth(5);
        UserPortfolioJTable.getColumnModel().getColumn(2).setPreferredWidth(6);
        UserPortfolioJTable.getColumnModel().getColumn(3).setPreferredWidth(7);
        UserPortfolioJTable.getTableHeader().setFont(new Font("Magneto", Font.BOLD, 12));
        UserPortfolioJTable.getTableHeader().setBackground(Color.black);
        UserPortfolioJTable.getTableHeader().setForeground(Color.yellow);
        //drawHeader();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UserPortfolioJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 102, 0));

        UserPortfolioJTable.setBackground(new java.awt.Color(255, 153, 0));
        UserPortfolioJTable.setForeground(new java.awt.Color(0, 51, 255));
        UserPortfolioJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        UserPortfolioJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            /*public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserPortfolioJTableMouseClicked(evt);
            }*/
        });
        jScrollPane1.setViewportView(UserPortfolioJTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable UserPortfolioJTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Stock stockToUpdate) {
        
        String symbol = stockToUpdate.getSymbol();
        System.out.println("Sybol inside update of O1 is "+symbol);
        int index = tableModel.getRow(symbol);
        System.out.println("Index is "+index);
        int previousValue = Integer.parseInt(tableModel.getValueAt(index, 1).toString() );
        System.out.println("Previous price  "+previousValue);
        int currentPrice = stockToUpdate.getCurrentPrice();

        tableModel.setValueAt(stockToUpdate.getSymbol() , index, 0);
        tableModel.setValueAt(stockToUpdate.getCurrentPrice() , index, 1);
        tableModel.setValueAt(stockToUpdate.getBidPrice() , index, 3);
        tableModel.setValueAt(stockToUpdate.getAskPrice() , index, 4);
        tableModel.setValueAt(previousValue , index, 5);
        
    }

    private void addUserPortfolioToTable() {
        
        //tableModel = new UserStockTableModel();
        registeredStockList = new ArrayList<>();
        Set <String > symbols = portfolio.keySet();
        System.out.println("Portfolio is "+symbols);
        for(String symbol : symbols ){
            Stock stock = portfolio.get(symbol);
            tableModel.updateRow(stock.getSymbol(),stock.getCurrentPrice(),stock.getBidPrice(),stock.getAskPrice(),0);
            stock.addObserver(stock,this);
            registeredStockList.add(stock);
        }
    }
	 public void drawWorld(){
        header.setBounds(counterVariable,0,800,30);
        int timerDelay = 100;
        new Timer(timerDelay, new ActionListener() {
            
            public void actionPerformed(ActionEvent evt) {
                counterVariable=counterVariable+2;
               
                if(counterVariable >= informationHeader.getWidth()){
                    counterVariable = 0;
                }
                header.setBounds(counterVariable,0,800,30);
                informationHeader.repaint();
                System.out.println(counterVariable);
            }
        }).start();
    }
}
